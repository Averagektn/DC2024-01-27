# ===============================
# DATABASE
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/distcomp
spring.datasource.username=postgres
spring.datasource.password=postgres
# ===============================
# OTHER SETTINGS
# ===============================
server.servlet.contextPath=/api/v1.0
server.port=24110
spring.docker.compose.enabled=false
# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ===============================
# FLY WAY SETTINGS
# ===============================
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=MessageActionDto:services.tweetservice.kafkadto.MessageActionDto

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=publisher
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=MessageActionDto:services.tweetservice.kafkadto.MessageActionDto

redis.server = localhost
redis.port = 6379

topic.inTopic=inTopic
topic.outTopic=outTopic
topic.messageChangeTopic=messageChangeTopic
